{"mappings":"AACA,MAKMA,EAAU,CACd,YANe,yEASVC,eAAeC,IACpB,MAAMC,QAAiBC,MARN,sCAQwB,C,QAAEJ,IAC3C,IAAKG,EAASE,GAAI,MAAM,IAAIC,MAAM,0BAClC,aAAaH,EAASI,M,CAGjBN,eAAeO,EAAgBC,GACpC,MAAMN,QAAiBC,MAAM,wDAA6BK,IAAW,C,QAAET,IACvE,IAAKG,EAASE,GAAI,MAAM,IAAIC,MAAM,4BAClC,aAAaH,EAASI,M,CCjBxB,MAAMG,EAASC,SAASC,cAAc,WAChCC,EAAQF,SAASC,cAAc,UAC/BE,EAAcH,SAASC,cAAc,iBACrCG,EAAUJ,SAASC,cAAc,aACjCI,EAASL,SAASC,cAAc,YAChCK,EAAWN,SAASC,cAAc,cAClCM,EAAiBP,SAASC,cAAc,oBACxCO,EAAiBR,SAASC,cAAc,oBAE9C,SAASQ,EAAaC,GACpBX,EAAOY,UAAUC,OAAO,UAAWF,E,CAGrC,SAASG,EAAYH,GACnBR,EAAMS,UAAUC,OAAO,UAAWF,E,CAoBpCP,EAAYW,iBAAiB,UAAUxB,MAAMyB,IAC3C,MAAMjB,EAAUiB,EAAMC,OAAOC,MAC7B,GAAInB,EAAS,CACXW,GAAa,GACbI,GAAY,GACZT,EAAQO,UAAUO,IAAI,UACtB,IACE,MAAMC,QAAgBtB,EAAgBC,GACtC,GAAuB,IAAnBqB,EAAQC,OAAc,MAAM,IAAIzB,MAAM,+BAhBxB0B,EAiBHF,EAAQ,GAhB3Bd,EAAOiB,IAAMD,EAAIE,KAAO,yBACxBjB,EAASkB,aAA2B,QAAbC,EAAAJ,EAAIK,OAAO,UAAE,IAAbD,OAAA,EAAAA,EAAeE,OAAQ,gBAC9CpB,EAAeiB,aAA2B,QAAbI,EAAAP,EAAIK,OAAO,UAAE,IAAbE,OAAA,EAAAA,EAAeC,cAAe,4BAC3DrB,EAAegB,aAA2B,QAAbM,EAAAT,EAAIK,OAAO,UAAE,IAAbI,OAAA,EAAAA,EAAeC,cAAe,sBAC3D3B,EAAQO,UAAUqB,OAAO,S,CAarB,MAAOC,GACPC,QAAQC,MAAMF,GACdpB,GAAY,E,CACb,QACCJ,GAAa,E,OAGfL,EAAQO,UAAUO,IAAI,UAzB1B,IAAwBG,EAECI,EACMG,EACAE,CAqBI,IAInCxC,iBACEmB,GAAa,GACbI,GAAY,GACZ,KAzCF,SAA6Ba,GAC3BA,EAAOU,SAAQC,IACb,MAAMC,EAAStC,SAASuC,cAAc,UACtCD,EAAOrB,MAAQoB,EAAMG,GACrBF,EAAOd,YAAca,EAAMV,KAC3BxB,EAAYsC,YAAYH,EAAO,G,CAsC/BI,OADqBnD,I,CAErB,MAAO0C,GACPC,QAAQC,MAAMF,GACdpB,GAAY,E,CACb,QACCJ,GAAa,E,EAIjBkC","sources":["src/cat-api.js","src/index.js"],"sourcesContent":["\nconst API_KEY =  'live_ma0X6AFhZcwiqjiNNSXx1dXp93kvvKItgUHQln9CzXlaCQvsGzyG5QdB9gSOgo6D';\nconst BASE_URL = 'https://api.thecatapi.com/v1';\nconst BREEDS_URL = `${BASE_URL}/breeds`;\nconst CAT_INFO_URL = `${BASE_URL}/images/search`;\n\nconst headers = {\n  'x-api-key': API_KEY,\n};\n\nexport async function fetchBreeds() {\n  const response = await fetch(BREEDS_URL, { headers });\n  if (!response.ok) throw new Error('Failed to fetch breeds');\n  return await response.json();\n}\n\nexport async function fetchCatByBreed(breedId) {\n  const response = await fetch(`${CAT_INFO_URL}?breed_ids=${breedId}`, { headers });\n  if (!response.ok) throw new Error('Failed to fetch cat info');\n  return await response.json();\n}\n","import { fetchBreeds, fetchCatByBreed } from './cat-api.js';\n\nconst loader = document.querySelector('.loader');\nconst error = document.querySelector('.error');\nconst breedSelect = document.querySelector('.breed-select');\nconst catInfo = document.querySelector('.cat-info');\nconst catImg = document.querySelector('.cat-img');\nconst catBreed = document.querySelector('.cat-breed');\nconst catDescription = document.querySelector('.cat-description');\nconst catTemperament = document.querySelector('.cat-temperament');\n\nfunction toggleLoader(show) {\n  loader.classList.toggle('hidden', !show);\n}\n\nfunction toggleError(show) {\n  error.classList.toggle('hidden', !show);\n}\n\nfunction populateBreedSelect(breeds) {\n  breeds.forEach(breed => {\n    const option = document.createElement('option');\n    option.value = breed.id;\n    option.textContent = breed.name;\n    breedSelect.appendChild(option);\n  });\n}\n\nfunction displayCatInfo(cat) {\n  catImg.src = cat.url || 'assets/placeholder.png'; // Imagine default dacă lipsește\n  catBreed.textContent = cat.breeds[0]?.name || 'Unknown breed';\n  catDescription.textContent = cat.breeds[0]?.description || 'No description available.';\n  catTemperament.textContent = cat.breeds[0]?.temperament || 'Unknown temperament';\n  catInfo.classList.remove('hidden');\n}\n\nbreedSelect.addEventListener('change', async event => {\n  const breedId = event.target.value;\n  if (breedId) {\n    toggleLoader(true);\n    toggleError(false);\n    catInfo.classList.add('hidden');\n    try {\n      const catData = await fetchCatByBreed(breedId);\n      if (catData.length === 0) throw new Error('No cat found for this breed');\n      displayCatInfo(catData[0]);\n    } catch (err) {\n      console.error(err);\n      toggleError(true);\n    } finally {\n      toggleLoader(false);\n    }\n  } else {\n    catInfo.classList.add('hidden');\n  }\n});\n\nasync function init() {\n  toggleLoader(true);\n  toggleError(false);\n  try {\n    const breeds = await fetchBreeds();\n    populateBreedSelect(breeds);\n  } catch (err) {\n    console.error(err);\n    toggleError(true);\n  } finally {\n    toggleLoader(false);\n  }\n}\n\ninit();\n"],"names":["$6b5f202d1456c0af$var$headers","async","$6b5f202d1456c0af$export$913382e0b15b5503","response","fetch","ok","Error","json","$6b5f202d1456c0af$export$57b7d3a597416aa2","breedId","$1f0dc3b9307be026$var$loader","document","querySelector","$1f0dc3b9307be026$var$error","$1f0dc3b9307be026$var$breedSelect","$1f0dc3b9307be026$var$catInfo","$1f0dc3b9307be026$var$catImg","$1f0dc3b9307be026$var$catBreed","$1f0dc3b9307be026$var$catDescription","$1f0dc3b9307be026$var$catTemperament","$1f0dc3b9307be026$var$toggleLoader","show","classList","toggle","$1f0dc3b9307be026$var$toggleError","addEventListener","event","target","value","add","catData","length","cat","src","url","textContent","ref","breeds","name","ref1","description","ref2","temperament","remove","err","console","error","forEach","breed","option","createElement","id","appendChild","$1f0dc3b9307be026$var$populateBreedSelect","$1f0dc3b9307be026$var$init"],"version":3,"file":"index.2c6b8ee5.js.map"}